name: EF Migrations Action Test

env:
  DOTNET_VERSION: 9.0.x
  PROJECT: EFCoreDemo/EFCoreDemo.csproj
  CONNECTION: Server=localhost;Port=5432;Database=postgres_demo_db;User ID=postgres_demo_user;Password=postgres_demo_password;

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Integration Test ${{ matrix.DB_CONNECTION_TYPE }}
    runs-on: ubuntu-latest
    services:
        postgres:
          image: postgres:15
          env:
            POSTGRES_USER: postgres_demo_user
            POSTGRES_PASSWORD: postgres_demo_password
            POSTGRES_DB: postgres_demo_db
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
          ports:
            - 5432:5432
    strategy:
      matrix:
        DB_CONNECTION_TYPE: [singleDB, multipleDB]
    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Install EF Core CLI
        run: dotnet tool install dotnet-ef --global

      - name: Restore dependencies
        run: dotnet restore ${{ env.PROJECT }}

      - name: Dotnet build project
        run: |
          dotnet build ${{ env.PROJECT }} \
            --no-restore \
            --nologo \
            --verbosity quiet \
            --property WarningLevel=0 \
            /clp:ErrorsOnly

      - name: Migrations ${{ matrix.DB_CONNECTION_TYPE }}
        if: ${{ matrix.DB_CONNECTION_TYPE == 'singleDB' }}
        id: ef-database-update-single
        env:
            ASPNETCORE_ENVIRONMENT: Development
        uses: ./.github/actions/ef-database-update
        with:
            project: ${{ env.PROJECT }}
            connection: ${{ env.CONNECTION }}

      - name: Migrations ${{ matrix.DB_CONNECTION_TYPE }}
        if: ${{ matrix.DB_CONNECTION_TYPE == 'multipleDB' }}
        id: ef-database-update-multiple
        env:
            ASPNETCORE_ENVIRONMENT: Development
        uses: ./.github/actions/ef-database-update
        with:
            project: ${{ env.PROJECT }}
            connections: |
                IdentityDbContext=${{ env.CONNECTION }}
                ApplicationDbContext=${{ env.CONNECTION }}

      - name: Migrations summary ${{ matrix.DB_CONNECTION_TYPE }}
        if: ${{ success() && matrix.DB_CONNECTION_TYPE == 'singleDB' }}
        run: |
            { 
            echo "## Migrations Results Table ${{ matrix.DB_CONNECTION_TYPE }} :bookmark_tabs:"
            echo "${{ steps.ef-database-update-single.outputs.result }}"
            echo ""
            } >> $GITHUB_STEP_SUMMARY

      - name: Migrations summary ${{ matrix.DB_CONNECTION_TYPE }}
        if: ${{ success() && matrix.DB_CONNECTION_TYPE == 'multipleDB' }}
        run: |
            { 
            echo "## Migrations Results Table ${{ matrix.DB_CONNECTION_TYPE }} :bookmark_tabs:"
            echo "${{ steps.ef-database-update-multiple.outputs.result }}"
            echo ""
            } >> $GITHUB_STEP_SUMMARY



